install.packages("elevatr")
# Load packages ----
library(elevatr)
# See help ----
?get_elev_raster
data(lake)
# Plot
plot(lake)
library(raster)
# Plot
plot(lake)
library(sp)
# Get medium res data ----
elev_med <- get_elev_raster(lake, z = 9)
# Plot
plot(elev_med)
plot(lake, add = T)
# Get high res data ----
elev_hi <- get_elev_raster(lake, z = 14)
# Plot
plot(elev_hi)
plot(lake, add = TRUE)
# Construct URL ----
coords <- data.frame(x = c(-111.419, -111.488, -111.139),
y = c(41.8, 41.87, 41.94))
coords
# USGS stores tiles in 1 x 1 degree increments
# Name of the tile is the max N and max W (= min(long))
x_tile <- ceiling(max(coords$x))
# USGS stores tiles in 1 x 1 degree increments
# Name of the tile is the max N and max W (= min(long))
x_tile <- floor(min(coords$x))
y_tile <- ceiling(max(coords$y))
# Directions should typically be N/W, but check
x_dir <- ifelse(x_tile < 0, "w", "e")
# Get tile directions
# Directions should typically be N/W, but check
x_dir <- ifelse(x_num < 0, "w", "e")
# Get tile numbers
x_num <- floor(min(coords$x))
y_num <- ceiling(max(coords$y))
# Get tile directions
# Directions should typically be N/W, but check
x_dir <- ifelse(x_num < 0, "w", "e")
y_dir <- ifelse(y_num > 0, "n", "s")
# Make tile names
x_tile <- paste0(x_dir, x_num)
# Make tile names
x_tile <- paste0(x_dir, abs(x_num))
y_tile <- paste0(y_dir, abs(y_num))
# Full tile string
tile <- paste0(y_tile, x_tile)
tile_url <- paste0(baseurl, tile, "/USGS_13_", tile, ".tif" )
# Now create URL
baseurl <- "https://prd-tnm.s3.amazonaws.com/StagedProducts/Elevation/13/TIFF/"
tile_url <- paste0(baseurl, tile, "/USGS_13_", tile, ".tif" )
tile_url
# Get tile numbers
x_num <- floor(coords$x)
y_num <- ceiling(coords$y)
construct_url <- function(coords) {
# USGS stores tiles in 1 x 1 degree increments
# Name of the tile is the max N and max W (= min(long))
# Get tile numbers
x_num <- unique(floor(coords$x))
y_num <- unique(ceiling(coords$y))
# Get tile directions
# Directions should typically be N/W, but check
x_dir <- ifelse(x_num < 0, "w", "e")
y_dir <- ifelse(y_num > 0, "n", "s")
# Make tile names
x_tile <- paste0(x_dir, abs(x_num))
y_tile <- paste0(y_dir, abs(y_num))
# Full tile string
tile <- paste0(y_tile, x_tile)
# Now create URL
baseurl <- "https://prd-tnm.s3.amazonaws.com/StagedProducts/Elevation/13/TIFF/"
tile_url <- paste0(baseurl, tile, "/USGS_13_", tile, ".tif" )
# Return
return(tile_url)
}
# Example
coords <- data.frame(x = c(-111.419, -111.488, -111.139),
y = c(41.8, 41.87, 41.94))
# Example
coords1 <- data.frame(x = c(-111.419, -111.488, -111.139),
y = c(41.8, 41.87, 41.94))
construct_url(coords1)
construct_url <- function(coords) {
# USGS stores tiles in 1 x 1 degree increments
# Name of the tile is the max N and max W (= min(long))
# Get tile numbers
x_num <- unique(floor(coords[[1]]))
y_num <- unique(ceiling(coords[[2]]))
# Get tile directions
# Directions should typically be N/W, but check
x_dir <- ifelse(x_num < 0, "w", "e")
y_dir <- ifelse(y_num > 0, "n", "s")
# Make tile names
x_tile <- paste0(x_dir, abs(x_num))
y_tile <- paste0(y_dir, abs(y_num))
# Full tile string
tile <- paste0(y_tile, x_tile)
# Now create URL
baseurl <- "https://prd-tnm.s3.amazonaws.com/StagedProducts/Elevation/13/TIFF/"
tile_url <- paste0(baseurl, tile, "/USGS_13_", tile, ".tif" )
# Return
return(tile_url)
}
# Example
coords1 <- c(-111.419, 41.94)
construct_url(coords1)
url1 <- construct_url(coords1)
# Now download
download.file(url = url1)
# Now download
download.file(url = url1, destfile = tempfile())
tempfile()
dir(tempdir())
f <- dir(tempdir(), full.names = T)[1]
f
plot(raster(f))
# Load packages----
library(raster)
plot(raster(f))
f
?f
?raster
?tempfile
# Now download
f <- tempfile(fileext = ".tif")
f
f
plot(raster(f))
# Now download
f <- tempfile(fileext = ".tif")
download.file(url = url1, destfile = f)
?download.file
plot(raster(f))
download.file(url = url1, destfile = f, method = "curl")
plot(raster(f))
construct_url <- function(coords) {
# USGS stores tiles in 1 x 1 degree increments
# Name of the tile is the max N and max W (= min(long))
# Get tile numbers
x_num <- unique(floor(coords[[1]]))
y_num <- unique(ceiling(coords[[2]]))
# Get tile directions
# Directions should typically be N/W, but check
x_dir <- ifelse(x_num < 0, "w", "e")
y_dir <- ifelse(y_num > 0, "n", "s")
# Make tile names
x_tile <- paste0(x_dir, abs(x_num))
y_tile <- paste0(y_dir, abs(y_num))
# Full tile string
tile <- paste0(y_tile, x_tile)
# Now create URL
baseurl <- "https://prd-tnm.s3.amazonaws.com/StagedProducts/Elevation/13/TIFF/"
tile_url <- paste0(baseurl, tile, "/USGS_13_", tile, ".tif" )
# Return
return(tile_url)
}
# Example
coords1 <- c(-111.419, 41.94)
url1 <- construct_url(coords1)
url1
# Now download
f <- tempfile(fileext = ".tif")
f
download.file(url = url1, destfile = f, method = "curl")
plot(raster(f))
# Load packages----
library(raster)
plot(raster(f))
points(coords1[1], coords1[2], pch = 16, col = "red")
raster(f)
